{"ast":null,"code":"import _objectSpread from \"/home/ashar/Projects/Noon/Playground/codesandbox/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { extends as _extends } from '../_virtual/_rollupPluginBabelHelpers.js';\nimport Loading from '../Loading/Loading.js';\nimport styles from './styles.js';\n\n// one of the reasons why we use a separate prop for passing ref instead of using forwardref\n\nfunction MonacoContainer(_ref2) {\n  var width = _ref2.width,\n    height = _ref2.height,\n    isEditorReady = _ref2.isEditorReady,\n    loading = _ref2.loading,\n    _ref = _ref2._ref,\n    className = _ref2.className,\n    wrapperProps = _ref2.wrapperProps;\n  return /*#__PURE__*/React.createElement(\"section\", _extends({\n    style: _objectSpread(_objectSpread({}, styles.wrapper), {}, {\n      width: width,\n      height: height\n    })\n  }, wrapperProps), !isEditorReady && /*#__PURE__*/React.createElement(Loading, {\n    content: loading\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    ref: _ref,\n    style: _objectSpread(_objectSpread({}, styles.fullWidth), !isEditorReady && styles.hide),\n    className: className\n  }));\n}\nMonacoContainer.propTypes = {\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  loading: PropTypes.oneOfType([PropTypes.element, PropTypes.string]).isRequired,\n  isEditorReady: PropTypes.bool.isRequired,\n  className: PropTypes.string,\n  wrapperProps: PropTypes.object\n};\nexport default MonacoContainer;","map":null,"metadata":{},"sourceType":"module"}